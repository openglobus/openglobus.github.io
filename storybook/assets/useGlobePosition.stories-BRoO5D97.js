import{r as s,R as a}from"./iframe-CeoX7Dbo.js";import{u as S,A as m,a as j,G as A}from"./Globe-CTua9O0E.js";import"./preload-helper-PPVm8Dsz.js";function H(e,d,t=[0,0]){const{globe:n}=S(),[w,v]=s.useState(null),u=s.useMemo(()=>{if(!n)return null;const o=n.planet.ellipsoid;if(e){const r=e instanceof m?e:new m(...e);return{cart:o.lonLatToCartesian(r),height:r.height||0}}return null},[n,e,d]),f=s.useRef(t);return s.useEffect(()=>{f.current=t},[t]),s.useEffect(()=>{if(!n||!u)return;const o=n.planet,r=o.renderer.handler,p=r.pixelRatio,{cart:b,height:E}=u,h=()=>{const i=o.camera,x=b.sub(i.eye),c=o.ellipsoid.equatorialSize+E,y=i._lonLat.height,k=Math.sqrt((c+y)*(c+y)-c*c),P=i.getForward().dot(x.getNormal())>0;if(k>x.length()&&P){const g=i.project3v(b),[G,M]=f.current,R=g.x/p+G,C=g.y/p-r.canvas.clientHeight+M;v({x:R,y:C,visible:!0})}else v({x:0,y:0,visible:!1})};return o.events.on("draw",h),()=>o.events.off("draw",h)},[n,u]),w}const $={title:"Hooks/useGlobePosition"},_=[{name:"📍 Dubai",coords:[55.27,25.2,0]},{name:"🗼 Paris",coords:[2.3522,48.8566,0]},{name:"🗽 New York",coords:[-74.006,40.7128,0]},{name:"🎌 Tokyo",coords:[139.6917,35.6895,0]},{name:"🕌 Cairo",coords:[31.2357,30.0444,0]},{name:"🦘 Sydney",coords:[151.2093,-33.8688,0]},{name:"🧊 Reykjavik",coords:[-21.8174,64.1265,0]},{name:"🕍 Moscow",coords:[37.6173,55.7558,0]},{name:"🌋 Honolulu",coords:[-157.8583,21.3069,0]}],q=({name:e,lonlat:d})=>{const t=H(d,void 0,[0,-12]);return t?.visible?a.createElement("div",{style:{position:"absolute",transform:`translate(${t.x}px, ${t.y}px) translate(-50%, -100%)`,background:"rgba(0,0,0,0.75)",color:"#fff",padding:"4px 8px",borderRadius:"6px",fontSize:"13px",pointerEvents:"none",whiteSpace:"nowrap"}},e):null},l={render:()=>a.createElement(j,null,a.createElement("div",{style:{position:"relative",width:"100%",height:"600px"}},a.createElement(A,{atmosphereEnabled:!0,sunActive:!0}),_.map(e=>a.createElement(q,{key:e.name,name:e.name,lonlat:new m(...e.coords)}))))};l.parameters={...l.parameters,docs:{...l.parameters?.docs,source:{originalSource:`{
  render: () => <GlobeContextProvider>
            <div style={{
      position: 'relative',
      width: '100%',
      height: '600px'
    }}>
                <Globe atmosphereEnabled={true} sunActive={true} />
                {cities.map(city => <Marker key={city.name} name={city.name} lonlat={new LonLat(...city.coords)} />)}
            </div>
        </GlobeContextProvider>
}`,...l.parameters?.docs?.source}}};const D=["MultiplePins"];export{l as MultiplePins,D as __namedExportsOrder,$ as default};
